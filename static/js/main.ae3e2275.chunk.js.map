{"version":3,"sources":["store/slice.js","components/AddForm/AddForm.jsx","components/EditForm/EditForm.jsx","components/EventItem/EventItem.jsx","components/Categories/Categories.jsx","components/Header/Header.jsx","App.jsx","store/store.js","index.jsx"],"names":["initialState","isPublished","isVisibleModal","isVisibleEditModal","eventsList","events","visibleEventMenuId","currentTimeZone","slice","createSlice","name","reducers","setIsPublished","state","action","payload","setIsVisibleModal","setIsVisibleEditModal","setEventsList","setVisibleEventMenuId","changeEventStatus","map","event","id","deleteEvent","filter","editEvent","title","time","setCurrentTimeZone","actions","setEventEdit","AddForm","dispatch","useDispatch","useSelector","useState","titleValue","setTitleValue","dateValue","setDateValue","closeModal","Modal","open","Box","className","onSubmit","preventDefault","newEvent","length","TextField","label","variant","type","value","onChange","target","Button","onClick","EditForm","eventId","handleSubmit","EventItem","dayjs","extend","utc","timezone","tz","format","classNames","eventActive","style","width","src","alt","Categories","publishedList","unpublishedList","Header","timezones","zone","App","store","configureStore","reducer","sliceReducer","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ae3e2275.chunk.js","sourcesContent":["import { createSlice } from '@reduxjs/toolkit';\n\nimport events from '../events.json';\n\nconst initialState = {\n  isPublished: true,\n  isVisibleModal: false,\n  isVisibleEditModal: false,\n  eventsList: events.events,\n  visibleEventMenuId: null,\n  currentTimeZone: 'UTC',\n};\n\nconst slice = createSlice({\n  name: 'events',\n  initialState,\n  reducers: {\n    setIsPublished: (state, action) => {\n      state.isPublished = action.payload;\n    },\n\n    setIsVisibleModal: (state, action) => {\n      state.isVisibleModal = action.payload;\n    },\n\n    setIsVisibleEditModal: (state, action) => {\n      state.isVisibleEditModal = action.payload;\n    },\n\n    setEventsList: (state, action) => {\n      state.eventsList = [...state.eventsList, action.payload];\n    },\n\n    setVisibleEventMenuId: (state, action) => {\n      state.visibleEventMenuId === action.payload\n        ? (state.visibleEventMenuId = null)\n        : (state.visibleEventMenuId = action.payload);\n    },\n\n    changeEventStatus: (state, action) => {\n      state.eventsList = state.eventsList.map((event) => {\n        if (event.id === action.payload) {\n          return {\n            ...event,\n            isPublished: !event.isPublished,\n          };\n        }\n\n        return event;\n      });\n    },\n\n    deleteEvent: (state, action) => {\n      state.eventsList = state.eventsList\n        .filter(event => event.id !== action.payload);\n    },\n\n    editEvent: (state, action) => {\n      state.eventsList = state.eventsList.map((event) => {\n        if (event.id === action.payload.id) {\n          return {\n            ...event,\n            title: action.payload.title,\n            time: action.payload.time,\n          };\n        }\n\n        return event;\n      });\n    },\n\n    setCurrentTimeZone: (state, action) => {\n      state.currentTimeZone = action.payload;\n    },\n  },\n});\n\nexport const {\n  setIsPublished,\n  setIsVisibleModal,\n  setIsVisibleEditModal,\n  setEventsList,\n  setVisibleEventMenuId,\n  changeEventStatus,\n  deleteEvent,\n  editEvent,\n  setEventEdit,\n  setCurrentTimeZone,\n} = slice.actions;\n\nexport default slice.reducer;\n","import React, { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport Box from '@mui/material/Box';\nimport Modal from '@mui/material/Modal';\nimport TextField from '@mui/material/TextField';\nimport Button from '@mui/material/Button';\nimport {\n  setEventsList,\n  setIsVisibleModal,\n} from '../../store/slice';\n\nconst AddForm = () => {\n  const dispatch = useDispatch();\n  const { eventsList, isVisibleModal } = useSelector(state => state.events);\n\n  const [titleValue, setTitleValue] = useState('');\n  const [dateValue, setDateValue] = useState('');\n\n  const closeModal = () => {\n    dispatch(setIsVisibleModal(!isVisibleModal));\n    setTitleValue('');\n    setDateValue('Central Europen Time');\n  };\n\n  const addEvent = (event) => {\n    event.preventDefault();\n\n    const newEvent = {\n      id: eventsList[eventsList.length - 1].id + 1,\n      title: titleValue,\n      time: dateValue,\n      isPublished: false,\n    };\n\n    dispatch(setEventsList(newEvent));\n    setTitleValue('');\n    closeModal();\n  };\n\n  return (\n    <Modal\n      open={isVisibleModal}\n    >\n      <Box className=\"modal-box\">\n        <form className=\"form\" onSubmit={addEvent}>\n          <h3 className=\"form__title\">\n            Add\n          </h3>\n          <TextField\n            id=\"filled-basic\"\n            label=\"title\"\n            variant=\"filled\"\n            type=\"text\"\n            value={titleValue}\n            onChange={event => setTitleValue(event.target.value)}\n          />\n          <TextField\n            id=\"filled-basic\"\n            variant=\"filled\"\n            type=\"datetime-local\"\n            value={dateValue}\n            onChange={event => setDateValue(event.target.value)}\n          />\n          <Button\n            variant=\"contained\"\n            type=\"submit\"\n          >\n            Add\n          </Button>\n          <Button\n            variant=\"contained\"\n            type=\"button\"\n            onClick={closeModal}\n          >\n            Close\n          </Button>\n        </form>\n      </Box>\n    </Modal>\n  );\n};\n\nexport default AddForm;\n","import React, { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport Box from '@mui/material/Box';\nimport Modal from '@mui/material/Modal';\nimport TextField from '@mui/material/TextField';\nimport Button from '@mui/material/Button';\nimport {\n  editEvent,\n  setIsVisibleEditModal,\n  setVisibleEventMenuId,\n} from '../../store/slice';\n\nimport './EditForm.scss';\n\nconst EditForm = ({ id }) => {\n  const dispatch = useDispatch();\n  const {\n    isVisibleEditModal,\n  } = useSelector(state => state.events);\n\n  const [titleValue, setTitleValue] = useState('');\n  const [dateValue, setDateValue] = useState('');\n\n  const closeModal = () => {\n    dispatch(setIsVisibleEditModal(!isVisibleEditModal));\n    dispatch(setVisibleEventMenuId(null));\n    setTitleValue('');\n    setDateValue('');\n  };\n\n  const handleSubmit = (event, eventId) => {\n    event.preventDefault();\n    dispatch(editEvent({\n      id: eventId,\n      title: titleValue,\n      time: dateValue,\n    }));\n    dispatch(setVisibleEventMenuId(null));\n    closeModal();\n  };\n\n  return (\n    <Modal\n      open={isVisibleEditModal}\n    >\n      <Box className=\"modal-box\">\n        <form\n          className=\"form\"\n          onSubmit={event => handleSubmit(event, id)}\n        >\n          <h3 className=\"form__title\">\n            Edit\n          </h3>\n          <TextField\n            id=\"filled-basic\"\n            label=\"title\"\n            variant=\"filled\"\n            type=\"text\"\n            value={titleValue}\n            onChange={event => setTitleValue(event.target.value)}\n          />\n          <TextField\n            id=\"filled-basic\"\n            variant=\"filled\"\n            type=\"datetime-local\"\n            value={dateValue}\n            onChange={event => setDateValue(event.target.value)}\n          />\n          <Button\n            variant=\"contained\"\n            type=\"submit\"\n          >\n            Edit\n          </Button>\n          <Button\n            variant=\"contained\"\n            type=\"button\"\n            onClick={closeModal}\n          >\n            Close\n          </Button>\n        </form>\n      </Box>\n    </Modal>\n  );\n};\n\nexport default EditForm;\n","import React from 'react';\nimport classNames from 'classnames';\nimport dayjs from 'dayjs';\nimport timezone from 'dayjs/plugin/timezone';\nimport utc from 'dayjs/plugin/utc';\nimport { useDispatch, useSelector } from 'react-redux';\nimport {\n  setVisibleEventMenuId,\n  changeEventStatus,\n  deleteEvent,\n  setIsVisibleEditModal,\n} from '../../store/slice';\nimport EditForm from '../EditForm/EditForm';\n\nimport './EventItem.scss';\n\nconst EventItem = ({ event }) => {\n  const dispatch = useDispatch();\n\n  const {\n    visibleEventMenuId,\n    isVisibleEditModal,\n    currentTimeZone,\n  } = useSelector(\n    state => state.events,\n  );\n\n  const handleEditButton = () => {\n    dispatch(setIsVisibleEditModal(!isVisibleEditModal));\n  };\n\n  dayjs.extend(utc);\n  dayjs.extend(timezone);\n\n  return (\n    <>\n      <div className=\"event__title\">\n        <span>{event.title}</span>\n      </div>\n\n      <div className=\"event__bottom\">\n        <button\n          type=\"button\"\n          className=\"event__button\"\n          onClick={() => dispatch(setVisibleEventMenuId(event.id))}\n        >\n          ...\n        </button>\n        <div className=\"event__timezone\">\n          {dayjs(event.time).tz(currentTimeZone).format('h:mm a - DD MMM YYYY')}\n        </div>\n      </div>\n      <div\n        className={\n          classNames('event__menu',\n            { eventActive: visibleEventMenuId === event.id })\n        }\n        style={{ width: '200' }}\n      >\n        <div className=\"buttonsGroup\">\n          <button\n            type=\"button\"\n            className=\"buttonsGroup__btn\"\n            onClick={handleEditButton}\n          >\n            <img src=\"images/edit-icon.png\" alt=\"edit event\" />\n            <span>Edit</span>\n          </button>\n          <button\n            type=\"button\"\n            className=\"buttonsGroup__btn\"\n            onClick={() => {\n              dispatch(changeEventStatus(event.id));\n              dispatch(setVisibleEventMenuId(event.id));\n            }}\n          >\n            <img src=\"images/status-icon.png\" alt=\"status event\" />\n            <span>{event.isPublished ? 'unPublish' : 'Publish'}</span>\n          </button>\n          <button\n            type=\"button\"\n            className=\"buttonsGroup__btn buttonsGroup__btn--delete\"\n            onClick={() => dispatch(deleteEvent(event.id))}\n          >\n            <img src=\"images/delete-icon.png\" alt=\"delete event\" />\n            <span>Delete</span>\n          </button>\n        </div>\n      </div>\n      {isVisibleEditModal\n        && visibleEventMenuId === event.id && <EditForm id={event.id} />}\n    </>\n  );\n};\n\nexport default EventItem;\n","import React from 'react';\nimport classNames from 'classnames';\n\nimport { useDispatch, useSelector } from 'react-redux';\nimport {\n  setIsPublished,\n  setIsVisibleModal,\n  setVisibleEventMenuId,\n} from '../../store/slice';\n\nimport AddForm from '../AddForm/AddForm';\nimport EventItem from '../EventItem/EventItem';\n\nimport './Categories.scss';\n\nconst Categories = () => {\n  const dispatch = useDispatch();\n  const {\n    isPublished,\n    isVisibleModal,\n    eventsList,\n  } = useSelector(state => state.events);\n\n  const publishedList = eventsList\n    .filter(event => event.isPublished === true);\n  const unpublishedList = eventsList\n    .filter(event => event.isPublished === false);\n\n  return (\n    <div className=\"categories\">\n      <div className=\"categories__menu\">\n        <ul className=\"categories__list\">\n          <li className=\"categories__item\">\n            <button\n              type=\"button\"\n              className={classNames('categories__button button', {\n                'categories__button--active': isPublished === true,\n              })}\n              onClick={() => {\n                dispatch(setIsPublished(true));\n                dispatch(setVisibleEventMenuId(null));\n              }}\n            >\n              Published\n            </button>\n          </li>\n          <li className=\"categories__item\">\n            <button\n              type=\"button\"\n              className={classNames('categories__button button', {\n                'categories__button--active': isPublished === false,\n              })}\n              onClick={() => {\n                dispatch(setIsPublished(false));\n                dispatch(setVisibleEventMenuId(null));\n              }}\n            >\n              Unpublished\n            </button>\n          </li>\n        </ul>\n\n        <div className=\"add\">\n          <button\n            type=\"button\"\n            className=\"button add__button\"\n            onClick={() => {\n              dispatch(setIsVisibleModal(!isVisibleModal));\n              dispatch(setVisibleEventMenuId(null));\n            }}\n          >\n            +  Add Event\n          </button>\n          {isVisibleModal && (\n            <AddForm />\n          )}\n        </div>\n      </div>\n\n      <div className=\"categories__content\">\n        <ul className=\"eventItem__list\">\n          {isPublished\n            ? publishedList.map(event => (\n              <li className=\"eventItem__item\" key={event.id}>\n                <EventItem event={event} />\n              </li>\n            ))\n            : unpublishedList.map(event => (\n              <li className=\"eventItem__item\" key={event.id}>\n                <EventItem event={event} />\n              </li>\n            ))\n          }\n        </ul>\n      </div>\n    </div>\n  );\n};\n\nexport default Categories;\n","import React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport {\n  setCurrentTimeZone,\n} from '../../store/slice';\n\nimport timezones from '../../timezones.json';\nimport './Header.scss';\n\nexport const Header = () => {\n  const dispatch = useDispatch();\n  const { currentTimeZone } = useSelector(state => state.events);\n\n  return (\n    <header className=\"header\">\n      <div className=\"header__content\">\n        <h1 className=\"header__title\">Event Manager</h1>\n        <div className=\"header__timezones timezones\">\n          <div className=\"timezones__title\">\n            <div className=\"timezones__logo\">\n              <img\n                src=\"images/timezones-logo.png\"\n                alt=\"timezones-logo\"\n              />\n            </div>\n            <span>Select Timezone</span>\n          </div>\n          <div className=\"timezones__list\">\n            <button type=\"button\" className=\"timezones__arrow\" />\n\n            <select\n              className=\"timezones__select\"\n              value={currentTimeZone}\n              onChange={event => dispatch(\n                setCurrentTimeZone(event.target.value),\n              )}\n            >\n              {timezones.timezones.map(zone => (\n                <option key={zone.id} value={zone.value}>\n                  {zone.name}\n                </option>\n              ))}\n            </select>\n          </div>\n        </div>\n      </div>\n    </header>\n  );\n};\n","import React from 'react';\r\n\r\nimport Categories from './components/Categories/Categories';\r\n\r\nimport './App.scss';\r\nimport { Header } from './components/Header/Header';\r\n\r\nexport const App = () => (\r\n  <div className=\"app\">\r\n    <div className=\"container\">\r\n      <Header />\r\n      <Categories />\r\n    </div>\r\n  </div>\r\n);\r\n","import { configureStore } from '@reduxjs/toolkit';\nimport sliceReducer from './slice';\n\nexport const store = configureStore({\n  reducer: { events: sliceReducer },\n});\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { Provider } from 'react-redux';\r\n\r\nimport { App } from './App';\r\nimport { store } from './store/store';\r\n\r\nimport './index.css';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <App />\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root'),\r\n);\r\n"],"sourceRoot":""}